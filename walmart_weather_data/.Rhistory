prius_gas_data <- read.csv("~/Google Drive/University of Texas/MSBA Fall Classes/Marketing Analytics/Homework/prius_gas_data.csv")
View(prius_gas_data)
prius = ead.csv("~/Google Drive/University of Texas/MSBA Fall Classes/Marketing Analytics/Homework/prius_gas_data.csv")
prius = read.csv("~/Google Drive/University of Texas/MSBA Fall Classes/Marketing Analytics/Homework/prius_gas_data.csv")
rm(prius_gas_data)
pigeon.racing <- read.csv("~/Downloads/pigeon-racing.csv")
View(pigeon.racing)
pigeons = read.csv("~/Downloads/pigeon-racing.csv")
rm(pigeon.racing)
names(pigeons)
lm.fit = lm(To.Win ~ Color + Sex + Breeder, data = pigeons)
summary(lm.fit)
lm.fit = lm(To.Win ~ factor(Color) + factor(Sex) + factor(Breeder), data = pigeons)
summary(lm.fit)
lm.fit = lm(factor(To.Win) ~ factor(Color) + factor(Sex) + factor(Breeder), data = pigeons)
summary(lm.fit)
rm(lm.fit)
plot(factor(pigeons$Color), factor(pigeons$To.Win)
plot(factor(pigeons$Color), factor(pigeons$To.Win))
plot(factor(pigeons$Color), factor(pigeons$To.Win))
install.packages("re")
setwd("~/Documents/GitHub_Repositories/marketing_project/walmart_weather_data")
full = 'full_dataset'
rm (full)
full_table <- read.csv("~/Documents/GitHub_Repositories/marketing_project/walmart_weather_data/full_table.csv")
View(full_table)
full_table <- read.csv("~/Documents/GitHub_Repositories/marketing_project/walmart_weather_data/full_table.csv")
str_1 = full_table$store_nbr == 1
store_1 = full_table[str_1,]
View(store_1)
x=model.fit(units~.,store_1)
install.packages('ISLR')
x=model.fit(units~.,store_1)
install.packages('leaps')
x=model.fit(units~.,store_1)
install.packages('glmnet')
library(glmnet)
x=model.fit(units~.,store_1)
x=model.matrix(units~.,store_1)
y=store_1$units
grid=10^seq(10,-2,length=100)
ridge.mod=glmnet(x,y,alpha=0,lambda=grid)
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[trian,],y[train], alpha = 1, lambda = grid)
lasso.mod = glmnet(x[train,],y[train], alpha = 1, lambda = grid)
plot(lasso.mod)
plot(lasso.mod)
lasso.coefs
set.seed(1)
cv.out = cv.glmnet(x[trian,], y[train,], alpha=1)
cv.out = cv.glmnet(x[train,], y[train,], alpha=1)
cv.out = cv.glmnet(x[train,], y[train], alpha=1)
plot(cv.out)
bestlam = cv.out$lambda.min
lasso.pred=predict(lasso.mod, s=bestlam, newx = x[test,])
mean((lasso.pred-y.test)^2)
out=glmnet(x,y,alpha=1, lambda=grid)
lasso.coef=predict(out,type="coefficients", s=bestlam)[1:20,]
lasso.coef
x=store_1[-1,]
View(x)
x=store_1
x=store_1[,-1]
View(x)
x=store_1[,-3]
y=store_1$units
grid=10^seq(10,-2,length=100)
ridge.mod=glmnet(x,y,alpha=0,lambda=grid)
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[train,],y[train], alpha = 1, lambda = grid)
x=as.matrix(store_1[,-3])
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[train,],y[train], alpha = 1, lambda = grid)
x=model.matrix(store_1[,-3])
x=(store_1[,-3])
x=store_1[,-1]
View(x)
x=store_1[,-3]
y=store_1$units
x=store_1[,-1]
y=store_1$units
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[train,], y[train], alpha = 1, lambda = grid)
x=model.matrix(units~.,x)
y=store_1$units
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[train,], y[train], alpha = 1, lambda = grid)
plot(lasso.mod)
set.seed(1)
cv.out = cv.glmnet(x[train,], y[train], alpha=1)
plot(cv.out)
bestlam = cv.out$lambda.min
lasso.pred=predict(lasso.mod, s=bestlam, newx = x[test,])
mean((lasso.pred-y.test)^2)
out=glmnet(x,y,alpha=1, lambda=grid)
lasso.coef=predict(out,type="coefficients", s=bestlam)[1:20,]
lasso.coef
coefs = [lasso.coef != 0]
colnames(x)
x=store_1[,-3]
y=store_1$units
train = sample(1:nrow(x), nrow(x)/2)
test = (-train)
y.test = y[test]
lasso.mod = glmnet(x[train,], y[train], alpha = 1, lambda = grid)
lasso.coef=predict(out,type="coefficients", s=bestlam)[1:20,]
lasso.coef
out=glmnet(x,y,alpha=1, lambda=grid)
